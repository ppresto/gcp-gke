global:
  enabled: true
  tlsDisable: false
  
  injector:
    enabled: true
    # Use the Enterprise Image
    #image:
      #repository: "hashicorp/vault-k8s"
      #tag: "0.4.0"
      #repository: "hashicorp/vault-enterprise"
      #tag: "1.5.0_ent"
  
    resources:
       requests:
         memory: 256Mi
         cpu: 250m
       limits:
         memory: 256Mi
         cpu: 250m
  
server:
  # Use the Enterprise Image
  image:
    repository: "hashicorp/vault-enterprise"
    tag: "1.5.0_ent"

  # These Resource Limits are in line with node requirements in the
  # Vault Reference Architecture for a Small Cluster
  #resources:
  #  requests:
  #    memory: 8Gi
  #    cpu: 2000m
  #  limits:
  #    memory: 16Gi
  #    cpu: 2000m

  # For HA configuration and because we need to manually init the vault,
  # we need to define custom readiness/liveness Probe settings
  readinessProbe:
    enabled: true
    #path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
    path: "/v1/sys/health?perfstandbyok=true&sealedcode=204&uninitcode=204"
  livenessProbe:
    enabled: true
    #path: "/v1/sys/health?standbyok=true"
    path: "/v1/sys/health?perfstandbyok=true&standbycode=429"
    initialDelaySeconds: 60

  # extraEnvironmentVars is a list of extra enviroment variables to set with the stateful set. These could be
  # used to include variables required for auto-unseal.
  extraEnvironmentVars:
    VAULT_CACERT: "/vault/userconfig/vault-server-tls/vault.ca"
    # Log Level - trace, debug, info, warn, and err
    VAULT_LOG_LEVEL: "debug"

  # extraVolumes is a list of extra volumes to mount. These will be exposed
  # to Vault in the path `/vault/userconfig/<name>/`. The value below is
  # an array of objects, examples are shown below.
  extraVolumes:
    - type: secret
      name: vault-server-tls
      path: "/vault/userconfig"
    - type: secret
      name: azure-keyvault-config
      path: "/vault/userconfig"

  # This configures the Vault Statefulset to create a PVC for audit
  # logs.  Once Vault is deployed, initialized and unseal, Vault must
  # be configured to use this for audit logs.  This will be mounted to
  # /vault/audit
  # See https://www.vaultproject.io/docs/audit/index.html to know more
  #auditStorage:
  #  enabled: false

  #standalone:
  #  enabled: false

  # Run Vault in "HA" mode. There are no storage requirements unless audit log
  # persistence or Integrated Storage is required.
  ha:
    enabled: true
    replicas: 5
    apiAddr: vault-active.default.svc
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true
        listener "tcp" {
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          #tls_disable_client_certs = "true"
          tls_cert_file = "/vault/userconfig/vault-server-tls/vault.crt"
          tls_key_file = "/vault/userconfig/vault-server-tls/vault.key"
          tls_ca_cert_file = "/vault/userconfig/vault-server-tls/vault.ca"
        }
        storage "raft" {
          path = "/vault/data"
            retry_join {
            leader_api_addr = "https://vault-0.vault-internal:8200"
            leader_ca_cert_file = "/vault/userconfig/vault-server-tls/vault.ca"
            leader_client_cert_file = "/vault/userconfig/vault-server-tls/vault.crt"
            leader_client_key_file = "/vault/userconfig/vault-server-tls/vault.key"
          }
          retry_join {
            leader_api_addr = "https://vault-1.vault-internal:8200"
            leader_ca_cert_file = "/vault/userconfig/vault-server-tls/vault.ca"
            leader_client_cert_file = "/vault/userconfig/vault-server-tls/vault.crt"
            leader_client_key_file = "/vault/userconfig/vault-server-tls/vault.key"
          }
          retry_join {
            leader_api_addr = "https://vault-2.vault-internal:8200"
            leader_ca_cert_file = "/vault/userconfig/vault-server-tls/vault.ca"
            leader_client_cert_file = "/vault/userconfig/vault-server-tls/vault.crt"
            leader_client_key_file = "/vault/userconfig/vault-server-tls/vault.key"
          }
          retry_join {
            leader_api_addr = "https://vault-3.vault-internal:8200"
            leader_ca_cert_file = "/vault/userconfig/vault-server-tls/vault.ca"
            leader_client_cert_file = "/vault/userconfig/vault-server-tls/vault.crt"
            leader_client_key_file = "/vault/userconfig/vault-server-tls/vault.key"
          }
          retry_join {
            leader_api_addr = "https://vault-4.vault-internal:8200"
            leader_ca_cert_file = "/vault/userconfig/vault-server-tls/vault.ca"
            leader_client_cert_file = "/vault/userconfig/vault-server-tls/vault.crt"
            leader_client_key_file = "/vault/userconfig/vault-server-tls/vault.key"
          }
        }  
        service_registration "kubernetes" {}

  # Auto Unseal Configuration is now a template being managed as a kubernetes. 
  # extraArgs allows us to tell vault to load this secret as a configuration at start time.
  extraArgs: "-config=/vault/userconfig/azure-keyvault-config/azure-keyvault-config.yaml"

  
  
  #postStart:
  #  - "/bin/bash"
  #  - "-c"
  #  - "sleep 5 && cp /vault/userconfig/demo-vault/bootstrap.sh /tmp/bootstrap.sh && chmod +x /tmp/bootstrap.sh && /tmp/bootstrap.sh"

# Vault UI
#ui:
#  enabled: true
#  serviceType: "LoadBalancer"
#  serviceNodePort: null
#  externalPort: 8200

  # For Added Security, edit the below
  #loadBalancerSourceRanges:
  #   - < Your IP RANGE Ex. 10.0.0.0/16 >
  #   - < YOUR SINGLE IP Ex. 1.78.23.3/32 >