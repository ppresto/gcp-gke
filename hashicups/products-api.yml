---
# Service to expose web frontend
apiVersion: v1
kind: Service
metadata:
  name: products-api-service
  labels:
    app: products-api
spec:
  selector:
    app: products-api
  ports:
    - name: http
      protocol: TCP
      port: 9090
      targetPort: 9090
---
# Web frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-api-deployment
  labels:
    app: products-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: products-api
  template:
    metadata:
      labels:
        app: products-api
      annotations:
        prometheus.io/scrape: "true"
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service-upstreams: "postgres:5432"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/namespace: "uscentral"
        vault.hashicorp.com/auth-path: "auth/k8s"
        vault.hashicorp.com/agent-inject-secret-db-creds: "kv/data/db/postgres/product-db-creds"
        vault.hashicorp.com/agent-inject-template-db-creds: |
          {
          {{ with secret "kv/data/db/postgres/product-db-creds" -}}
            "db_connection": "host=localhost port=5432 user={{ .Data.data.username }} password={{ .Data.data.password }} dbname=products sslmode=disable",
            "bind_address": ":9090",
            "metrics_address": ":9103"
          {{- end }}
          }
        vault.hashicorp.com/role: "k8s"
    spec:
      serviceAccountName: products-api
      containers:
        - name: products-api
          image: hashicorpdemoapp/product-api:v0.0.11
          ports:
            - containerPort: 9090
            - containerPort: 9102
          env:
            - name: "CONFIG_FILE"
              value: "/vault/secrets/db-creds"
          livenessProbe:
            httpGet:
              path: /health
              port: 9090
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 30
---
# https://www.vaultproject.io/docs/auth/kubernetes/#configuring-kubernetes
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: role-tokenreview-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: products-api
    namespace: default